[[diary|日誌]]
%toc 2013-02-07

= vimwiki =

== xypic ==
[[http://sonoisa.github.com/xyjax/xyjax.html|xyjax]]
に従って、次の謎のjavascriptをhtmlに直に埋め込むと、
{{{js class='brush: js;'
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
	TeX: {extensions: ["xypic.js", "AMSmath.js","AMSsymbols.js"]}
	//                  ^^^^^^^^load xypic.js
	, extensions: ["tex2jax.js","fp.js"]
	//                         ^^^^^load fp.js
});
</script>
}}}
xypicが使えるようになる。
<div class='first'>
{{{
{{$%xy%
\xymatrix{
	A \ar[r] & B \\
	C \ar[ur]
}
}}$
}}}
</div><div class='next'>
{{$%xy%
\xymatrix{
	A \ar[r] & B \\
	C \ar[ur]
}
}}$
</div><div class='last'/>

== リンクの取り扱い ==
`VimwikiLinkHandler`と`VimwikiWikiIncludeHandler`を見よ。

== VimwikiAll2HTMLのビジーループ ==
コマンド`:VimwikiAll2HTML`がビジーループした。
`VimwikiAll2HTML`がビジーループしても、vimは閉じることができるので、
則、vimを閉じて、一括でのhtml変換を諦めること。
2013-02-18:: ubuntu上ではビジーループしなかったので、windows上でのファイルアクセツの問題だと思う。

== vimwikiの特性 ==
vimwikiはファイル内の特定の箇所へのリンクが張れないという制限から、
一つのファイルに複数の話題を詰め込むと一つ目の話題以外が隠れてしまう。
この制限はhtmlへの変換を早くするためで、リーズナブルな選択だと思う。
したがって、この制限に合うような形で記事を作っていくべきだろう。

記事を作る方針は次のようにしよう。
* 一つのファイルは一つの話題する。
* 既存の話題は既存のファイルに追記する。
* 新規の話題ができた時にファイルを追加する。

== mathjax ==
[[http://boolesrings.org/scoskey/writing-math-on-the-web/|mathjaxの定理環境]]
いつからHTMLは野良タグが使えるようになったのだろう。
完璧なcssさえ用意すれば、野良タグでもブラウザーは理解できるはずだが。

== vimwikiと$TeX$ ==
vimwikiは通常の文章を書くことには適しているが、
文章の中に定義、定理、証明などブロックを挿入していくスタイルの記述には適していないかもしれない。
<a href='#stanley-1'>教科書</a>のノートをvimwikiで取りながら思った。

ブロックのタイプごとに表示方法をカスタマイズすることは、
htmlより$\TeX$の方がやりやすい上に、カスタマイズが多くなると、
vimwikiを使わずにhtmlを直書きした方が早いということになってしまう。
vimwikiを使う場合には、文章をメインにして、
数式も書ける位の気持ちで使うのが良いと思う。

== htmlタグの属性 ==
wikiを書いていて気がついたのだが、javascriptを使えば、
自作のwikiを作るのは簡単なんだな。
サーバーを設定してサーバーサイドで処理をすることに比べると。

vimwikiでは二つ以上の属性を持つhtmlタグは扱えないらしい。
{{{xml class='brush: xml;'
<a name='x' href='b'>c</a>
}}}
というコードを書いたら出力htmlが変になった。

== MathJaxの拡張点 ==
mathjaxは単純な$\TeX$の移植ではなく、拡張している部分もあるようだ。
vimwiki+mathjax:
{{{plain class='brush: plain;'
{{$%split%
x + y &= z & \quad\text{for all } x,y,z\in A \\
z_1 +\cdots+ z_n &= x + y & \quad\text{for all } x,y,z_1,z_2,\dots\in A \\
}}$
}}}
html:
{{$%split%
x + y &= z & \quad\text{for all } x,y,z\in A \\
z_1 +\cdots+ z_n &= x + y & \quad\text{for all } x,y,z_1,z_2,\dots\in A \\
}}$
splitという$\TeX$の環境は、本来であれば、&は各行につき一つまでしか使えないが、
mathjaxでは&を各行にいくつでも配置できるようだ。

== ツール ==
vimwikiを使うにあたって幾つかのツールを使ってみることにする。
* [[http://www.mathjax.org/|MathJax]]
	これはすごい。リソースが多そうなのでHTMLからwebを参照するようにしている。
	したがって、internetに繋がっていない環境では数式は表示されない。
* [[http://alexgorbatchev.com/SyntaxHighlighter/|SyntaxHighlighter]]
	Wikiが$\TeX$に比べて良いところにプログラムコードの取り扱いが丁寧なことがある。
	というわけで、HTMLをカラフルにするjavascriptを使ってみる。
* [[http://nanasi.jp/|名無しのvim使い]]
	ツールではないがvimwikiのHowToを紹介してくれている。
vimwikiのカスタムは次のスクリプトを参考にするとよい。
{{{
~/vimfiles/plugin/vimwiki.vim
~/vimfiles/ftplugin/vimwiki.vim
}}}
